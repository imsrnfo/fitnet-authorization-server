buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.igmasiri.fitnet'
version = '1.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-oauth2', version: '2.1.2.RELEASE'
    compile "org.springframework.cloud:spring-cloud-starter-security"
    compile "mysql:mysql-connector-java"
    compile 'commons-io:commons-io:2.6'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.h2database:h2'

    compile ("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    compile "org.springframework.boot:spring-boot-starter-undertow"
}

task setProductionConfig() {
    group = "other"
    description = "Sets the environment for production mode"
    doFirst {
        ant.propertyfile(file: "./build/resources/main/application.properties") {
            entry(key: "spring.profiles.active", value: "produccion")
        }
    }
    doLast {
    }
}

bootWar {
    dependsOn setProductionConfig
}

task setDevelopmentConfig() {
    group = "other"
    description = "Sets the environment for development mode"
    doFirst {
        ant.propertyfile(file: "./build/resources/main/application.properties") {
            entry(key: "spring.profiles.active", value: "desarrollo")
        }
    }
    doLast {
    }
}

bootRun{
    dependsOn setDevelopmentConfig
}

sourceSets.main.java.srcDirs = ['src/main/java']